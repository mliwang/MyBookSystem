<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="mapper.BookrecordsMapper" >
  <resultMap id="BaseResultMap" type="cn.mybookmanager.model.Bookrecords" >
    <result column="bookMemuId" property="bookmemuid" jdbcType="INTEGER" />
    <result column="bookid" property="bookid" jdbcType="INTEGER" />
    <result column="supplierId" property="supplierid" jdbcType="INTEGER" />
    <result column="number" property="number" jdbcType="INTEGER" />
    <result column="purchaseTime" property="purchasetime" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    bookMemuId, bookid, supplierId, number, purchaseTime
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="cn.mybookmanager.model.BookrecordsExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from bookrecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <delete id="deleteByExample" parameterType="cn.mybookmanager.model.BookrecordsExample" >
    delete from bookrecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="cn.mybookmanager.model.Bookrecords" >
    insert into bookrecords (bookMemuId, bookid, supplierId, 
      number, purchaseTime)
    values (#{bookmemuid,jdbcType=INTEGER}, #{bookid,jdbcType=INTEGER}, #{supplierid,jdbcType=INTEGER}, 
      #{number,jdbcType=INTEGER}, #{purchasetime,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="cn.mybookmanager.model.Bookrecords" >
    insert into bookrecords
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="bookmemuid != null" >
        bookMemuId,
      </if>
      <if test="bookid != null" >
        bookid,
      </if>
      <if test="supplierid != null" >
        supplierId,
      </if>
      <if test="number != null" >
        number,
      </if>
      <if test="purchasetime != null" >
        purchaseTime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="bookmemuid != null" >
        #{bookmemuid,jdbcType=INTEGER},
      </if>
      <if test="bookid != null" >
        #{bookid,jdbcType=INTEGER},
      </if>
      <if test="supplierid != null" >
        #{supplierid,jdbcType=INTEGER},
      </if>
      <if test="number != null" >
        #{number,jdbcType=INTEGER},
      </if>
      <if test="purchasetime != null" >
        #{purchasetime,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.mybookmanager.model.BookrecordsExample" resultType="java.lang.Integer" >
    select count(*) from bookrecords
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update bookrecords
    <set >
      <if test="record.bookmemuid != null" >
        bookMemuId = #{record.bookmemuid,jdbcType=INTEGER},
      </if>
      <if test="record.bookid != null" >
        bookid = #{record.bookid,jdbcType=INTEGER},
      </if>
      <if test="record.supplierid != null" >
        supplierId = #{record.supplierid,jdbcType=INTEGER},
      </if>
      <if test="record.number != null" >
        number = #{record.number,jdbcType=INTEGER},
      </if>
      <if test="record.purchasetime != null" >
        purchaseTime = #{record.purchasetime,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update bookrecords
    set bookMemuId = #{record.bookmemuid,jdbcType=INTEGER},
      bookid = #{record.bookid,jdbcType=INTEGER},
      supplierId = #{record.supplierid,jdbcType=INTEGER},
      number = #{record.number,jdbcType=INTEGER},
      purchaseTime = #{record.purchasetime,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
</mapper>