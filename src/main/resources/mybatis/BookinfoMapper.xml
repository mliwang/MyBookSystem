<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.mybookmanager.mapper.BookinfoMapper" >

  <resultMap id="BaseResultMap" type="cn.mybookmanager.model.Bookinfo" >
    <id column="bookid" property="bookid" jdbcType="VARCHAR" />
    <result column="bookName" property="bookname" jdbcType="VARCHAR" />
    <result column="author" property="author" jdbcType="VARCHAR" />
    <result column="edition" property="edition" jdbcType="INTEGER" />
    <result column="publishUnit" property="publishunit" jdbcType="VARCHAR" />
    <result column="ISBN" property="isbn" jdbcType="VARCHAR" />
    <result column="inventory" property="inventory" jdbcType="INTEGER" />
    <result column="supplier" property="supplier" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    bookid, bookName, author, edition, publishUnit, ISBN, inventory,supplier
  </sql>
<!--根据教材的某些信息查找符合条件的教材-->
  <select id="selectbookBysomething" resultMap="BaseResultMap" parameterType="cn.mybookmanager.model.Bookinfo" >
    select
    DISTINCT
    <include refid="Base_Column_List" />
    from bookinfo
    WHERE
     <if test="bookname!=null and bookname!=''"> bookName LIKE "%"#{bookname,jdbcType=VARCHAR}"%" </if>
      <if test="author!=null and author!=''">and  author LIKE "%"#{author,jdbcType=VARCHAR}"%" </if>
      <if test="publishunit!=null and publishunit!=''">and  publishUnit LIKE "%"#{publishunit,jdbcType=VARCHAR}"%" </if>
      <if test="edition!=null and edition!=0">and  edition LIKE "%"#{edition,jdbcType=INTEGER}"%" </if>
      <if test="isbn!=null and isbn!=''">and  ISBN LIKE "%"#{isbn,jdbcType=VARCHAR}"%" </if>
      <if test="supplier!=null and supplier!=''">and  supplier LIKE "%"#{supplier,jdbcType=VARCHAR}"%" </if>


  </select>

<!--按主键查找教材信息-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select
    DISTINCT
    <include refid="Base_Column_List" />
    from bookinfo
    where bookid = #{bookid,jdbcType=VARCHAR}
  </select>
  <!--查找对应教材的完整信息-->
  <select id="selectbookid" resultMap="BaseResultMap" parameterType="cn.mybookmanager.model.Bookinfo" >
    select
    DISTINCT
    <include refid="Base_Column_List" />
    from bookinfo
    where
    bookName = #{bookname,jdbcType=VARCHAR} and
    author = #{author,jdbcType=VARCHAR} and
    edition = #{edition,jdbcType=INTEGER} and
    publishUnit = #{publishunit,jdbcType=VARCHAR} and
    ISBN = #{isbn,jdbcType=VARCHAR} AND
    supplier=#{supplier,jdbcType=VARCHAR}
  </select>
  <!--查询所有书籍信息-->
  <select id="selectAllBook" resultMap="BaseResultMap">
    select
    DISTINCT
    <include refid="Base_Column_List" />
    from bookinfo
  </select>

  <!--删除教材-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from bookinfo
    where bookid = #{bookid,jdbcType=VARCHAR}
  </delete>
<!--添加新教材信息-->
  <insert id="insert" parameterType="cn.mybookmanager.model.Bookinfo" >
    <selectKey keyProperty="bookid" resultType="String" order="BEFORE">
      select replace(uuid(),'-','') from dual
    </selectKey>
    insert into bookinfo (bookid, bookName, author,
    edition, publishUnit, ISBN,
    inventory, supplier)
    values (#{bookid,jdbcType=VARCHAR}, #{bookname,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR},
    #{edition,jdbcType=INTEGER}, #{publishunit,jdbcType=VARCHAR}, #{isbn,jdbcType=VARCHAR},
    #{inventory,jdbcType=INTEGER}, #{supplier,jdbcType=VARCHAR})
  </insert>

<!--根据教材id修改教材信息-->
  <update id="updateByPrimaryKey" parameterType="cn.mybookmanager.model.Bookinfo" >
    update bookinfo
    set bookName = #{bookname,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      edition = #{edition,jdbcType=INTEGER},
      publishUnit = #{publishunit,jdbcType=VARCHAR},
      ISBN = #{isbn,jdbcType=VARCHAR},
      inventory = #{inventory,jdbcType=INTEGER},
      supplier=#{supplier,jdbcType=VARCHAR}
    where bookid = #{bookid,jdbcType=VARCHAR}
  </update>
</mapper>